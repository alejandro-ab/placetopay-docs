openapi: 3.0.0
info:
  title: 3DS Server
  version: '1.0'
  description: 'This document presents the operation of the 3DS Server service or API. It exposes the routes to consume (/sessions and /transactions), the url, method, parameters and data types it receives. Additionally, it contains response examples for different types of requests in the cardholder authentication flow within the 3-D Secure protocol framework.'
  contact:
    name: Evertec Placetopay
    email: desarrollo@placetopay.com
    url: 'https://www.placetopay.com/web/'
servers:
  - url: 'https://3dss-test.placetopay.com/api'
    description: Sandbox
  - url: 'https://3ds-mpi.placetopay.com/api'
    description: Production
paths:
  /threeds/v2x/sessions:
    post:
      summary: Create a new session
      operationId: post-sessions
      responses:
        '200':
          description: |-
            ***Response received: 200 Ok***
            
              To continue with the authentication process, the user must be redirected to the url received in the
                field (redirectURL). There they will be informed of the authentication result and subsequently,
                they will be redirected to the merchant.

          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionToken:
                    type: string
                    description: Authentication token.
                    minLength: 64
                    maxLength: 64
                    example: 8e580eb1948ae1b13e614aac04c75ad31d6431ef2ea7b1a85573979b7ec4e656
                  redirectURL:
                    type: string
                    description: Redirect URL to continue the authentication process.
                    example: 'https://3dss-test.placetopay.com/threeds/v2x/sessions/8e580eb1948ae1b13e614aac04c75ad31d6431ef2ea7b1a85573979b7ec4e656'
                    minLength: 1
                    maxLength: 256
                  transactionID:
                    type: integer
                    description: Transaction indicator.
                    example: 9099
                    minimum: 0
                    maximum: 4294967295
                required:
                  - sessionToken
                  - redirectURL
                  - transactionID
              examples:
                Successful response:
                  value:
                    sessionToken: 8e580eb1948ae1b13e614aac04c75ad31d6431ef2ea7b1a85573979b7ec4e656
                    redirectURL: 'https://3dss-test.placetopay.com/threeds/v2x/sessions/8e580eb1948ae1b13e614aac04c75ad31d6431ef2ea7b1a85573979b7ec4e656'
                    transactionID: 9071
        '401':
          $ref: '#/components/responses/unauthorized-response'
        '422':
          description: '***Response received: 422 Unprocessable Entity***'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_number:
                    type: string
                    description: |-
                      Error codes:
                      * 1000 External service connection error
                      * 1001 Invalid response from external service
                      * 1002 Invalid arguments to initiate a request
                      * 1003 No associated merchant found
                      * 1004 No associated subscription found
                      * 1005 The associated franchise is not enabled
                      * 1006 The associated acquirer is not enabled
                      * 1007 The associated subscription is not completely configured
                      * 1008 Error message received from external service
                      * 1009 There is no merchant associated with this token, request a new token
                      * 1010 No directory server found for the selected protocol
                      * 1011 The merchant is not enabled
                      * 1012 The merchant does not have a merchant category code (MCC)
                  error_description:
                    type: string
                  errors:
                    type: object
                    description: List of fields that present validation errors.
                required:
                  - error_number
                  - error_description
                  - errors
              examples:
                Response with errors:
                  value:
                    error_number: '1011'
                    error_description: Invalid arguments to initiate request
                    errors:
                      acctNumber:
                        - The acct number field is required.
                      cardExpiryDate:
                        - The card expiry date field is required.
                      purchaseAmount:
                        - The purchase amount field is required.
                      redirectURI:
                        - The redirect u r i field is required.
                      purchaseCurrency:
                        - The purchase currency field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                acctNumber:
                  type: string
                  description: |-
                    Account number that will be used in the authorization request for payment transactions.
                    Must pass [Luhn Algorithm](https://es.wikipedia.org/wiki/Algoritmo_de_Luhn) validation
                    **Accepted values:** See [ISO 7812](https://es.wikipedia.org/wiki/ISO/IEC_7812) format
                  minLength: 13
                  maxLength: 19
                  example: '4005580000000040'
                cardExpiryDate:
                  type: string
                  description: |-
                    Card expiration date provided by the cardholder.
                    **Format:** ym
                    **Example:** 2506
                  minLength: 4
                  maxLength: 4
                  example: '2506'
                purchaseAmount:
                  type: string
                  description: |-
                    Transaction amount.
                    **Example:** 20.5
                  example: '20.5'
                purchaseCurrency:
                  type: string
                  description: |-
                    The 3-letter alphabetic code of the currency in which the purchase amount is expressed
                    **Values:** See [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217) format
                  minLength: 3
                  maxLength: 3
                  example: USD
                redirectURI:
                  type: string
                  description: URL of the system where the cardholder will be redirected after completing an authentication transaction.
                  maxLength: 256
                  format: uri
                  example: 'https://www.placetopay.com'
                threeDSAuthenticationInd:
                  type: string
                  description: |-
                    Indicates the type of authentication request.
                    **Values:**
                    * `PAYMENT_TRANSACTION` (01) - Payment transaction
                    * `RECURRING_TRANSACTION` (02) - Recurring transaction
                    * `INSTALMENT_TRANSACTION` (03) - Installment transaction
                    * `ADD_CARD` (04) - Add a card
                    * `MAINTAIN_CARD` (05) - Maintain a card
                    * `CARDHOLDER_VERIFICATION_AS_PART_OF_EMV_TOKEN_IDV` (06) - Cardholder verification as part of EMV token ID&V
                    * `BILLING_AGREEMENT` (07) - Billing agreement
                    * `MASTERCARD_THE_PAYMENT_REQUEST_IS_FOR_AN_AGENT_PAYMENT_TRANSACTION` (85) - Agent payment transaction for Mastercard
                    * `MASTERCARD_FOR_UNKNOWN_OR_UNDEFINED_FINAL_AMOUNT_BEFORE_PURCHASE_TRANSACTION` (86) - Transaction for Mastercard with unknown or undefined final amount before purchase
                  minLength: 2
                  maxLength: 2
                  example: '01'
                reference:
                  type: string
                  description: Transaction reference.
                  maxLength: 32
                recurringFrequency:
                  type: string
                  description: |-
                    Indicates the minimum number of days between authorizations.
                    Required if threeDSAuthenticationInd equals `RECURRING_TRANSACTION` (02) or `INSTALMENT_TRANSACTION` (03)
                    Must be present whenever recurringExpiry is sent
                    **Example values:** 31, 031, 0031
                  minLength: 1
                  maxLength: 4
                recurringExpiry:
                  type: string
                  description: |-
                    Date after which no more authorizations will be made.
                    Required if threeDSAuthenticationInd equals `RECURRING_TRANSACTION` (02) or `INSTALMENT_TRANSACTION` (03)
                    Must be present whenever recurringFrequency is sent
                    **Format:** Ymd
                    **Example:** 20250601
                  minLength: 8
                  maxLength: 8
                purchaseInstalData:
                  type: string
                  description: |-
                    Indicates the maximum number of authorizations allowed for installment payments.
                    The value must be greater than 1. Required if the merchant and cardholder have agreed to installment payments, i.e., if threeDSAuthenticationInd = 03.
                    Omitted if it is not an installment payment authentication.
                    **Example values:** 2, 02, 002
                  minLength: 1
                  maxLength: 3
                threeDSAuthenticationInfo:
                  $ref: '#/components/schemas/threeDSRequestorAuthenticationInfoProperties'
                threeDSChallengeInd:
                  type: string
                  description: |-
                    Indicates if a challenge is requested for this transaction.
                    If this parameter is not sent in the request, `NO_PREFERENCE` (01) will be assumed as default value.
                    **Values:**
                    * `NO_PREFERENCE` (01) - No preference
                    * `NO_CHALLENGE_REQUESTED` (02) - No challenge requested
                    * `CHALLENGE_REQUESTED_REQUESTOR_PREFERENCE` (03) - Challenge requested (requestor preference)
                    * `CHALLENGE_REQUESTED_MANDATE` (04) - Challenge requested (mandate)
                    * `NO_CHALLENGE_REQUESTED_RISK_PERFORMED` (05) - No challenge requested (risk analysis performed)
                    * `NO_CHALLENGE_REQUESTED_DATA_SHARED_ONLY` (06) - No challenge requested (data shared only)
                    * `NO_CHALLENGE_REQUESTED_CONSUMER_AUTH_PERFORMED` (07) - No challenge requested (consumer authentication performed)
                    * `NO_CHALLENGE_REQUESTED_WHITELIST_EXEMPTION` (08) - No challenge requested (whitelist exemption)
                    * `NO_CHALLENGE_REQUESTED_WHITELIST_PROMPT_REQUESTED` (09) - No challenge requested (whitelist prompt requested)
                    * `VISA_RESERVED` (82) - Reserved for VISA
                  minLength: 2
                  maxLength: 2
                threeDSRequestorID:
                  type: string
                  description: |-
                    Identifier associated by the DS to the 3DS Requestor.
                    Each Directory Server may impose specific format and character requirements on the content of this field.
                  maxLength: 35
                acctInfo:
                  $ref: '#/components/schemas/acctInfoProperties'
                acctID:
                  type: string
                  description: Additional account information provided by 3DS Requestor.
                  maxLength: 64
                billAddrCity:
                  type: string
                  description: The name of the city of the billing address of the Cardholder associated with the card used for this purchase.
                  maxLength: 50
                billAddrCountry:
                  type: string
                  description: |-
                    The three-letter alphabetic code that relates to the country of the billing address of the Cardholder associated with the card used for this purchase.
                    **Accepted values:** See [ISO 3166-1](https://es.wikipedia.org/wiki/ISO_3166-1) format
                  maxLength: 3
                billAddrLine1:
                  type: string
                  description: First line of the postal address or local equivalent part of the billing address of the cardholder associated with the card used for this purchase.
                  maxLength: 50
                billAddrLine2:
                  type: string
                  description: Second line of the postal address or local equivalent part of the billing address of the cardholder associated with the card used for this purchase.
                  maxLength: 50
                billAddrLine3:
                  type: string
                  description: Third line of the postal address or local equivalent part of the billing address of the cardholder associated with the card used for this purchase.
                  maxLength: 50
                billAddrPostCode:
                  type: string
                  description: ZIP or other postal code of the billing address of the cardholder associated with the card used for this purchase.
                  maxLength: 16
                billAddrState:
                  type: string
                  description: |-
                    Three-letter alphabetic code of the country subdivision that represents the state or province of the billing address of the cardholder associated with the card used for this purchase.
                    **Values:** See [ISO 3166-2](https://es.wikipedia.org/wiki/ISO_3166-2) format
                  maxLength: 3
                email:
                  type: string
                  description: The email address associated with the account that the Cardholder entered or that is archived with the 3DS Requestor.
                  format: email
                  maxLength: 254
                homePhone:
                  $ref: '#/components/schemas/PhoneProperties'
                mobilePhone:
                  $ref: '#/components/schemas/PhoneProperties'
                cardholderName:
                  type: string
                  description: Name of the cardholder.
                  minLength: 2
                  maxLength: 45
                shipAddrCity:
                  type: string
                  description: Full or partial name of the city of the shipping address provided by the cardholder.
                  maxLength: 50
                shipAddrCountry:
                  type: string
                  description: |-
                    The three-letter alphabetic code that relates to the country of the shipping address provided by the Cardholder.
                    **Values:** See [ISO 3166-1](https://es.wikipedia.org/wiki/ISO_3166-1) format
                  minLength: 3
                  maxLength: 3
                shipAddrLine1:
                  type: string
                  description: First line of the postal address or local equivalent part of the shipping address provided by the cardholder.
                  maxLength: 50
                shipAddrLine2:
                  type: string
                  description: Second line of the postal address or local equivalent part of the shipping address provided by the cardholder.
                  maxLength: 50
                shipAddrLine3:
                  type: string
                  description: Third line of the postal address or local equivalent part of the shipping address provided by the cardholder.
                  maxLength: 50
                shipAddrPostCode:
                  type: string
                  description: ZIP or other postal code of the shipping address provided by the cardholder
                  maxLength: 16
                shipAddrState:
                  type: string
                  description: |-
                    Three-letter alphabetic code of the country subdivision that represents the state or province of the shipping address provided by the cardholder.
                    **Values:** See [ISO 3166-2](https://es.wikipedia.org/wiki/ISO_3166-2) format
                  maxLength: 3
                workPhone:
                  $ref: '#/components/schemas/PhoneProperties'
                merchantRiskIndicator:
                  $ref: '#/components/schemas/merchantRiskIndicatorProperties'
                addPriorInformation:
                  type: string
                  description: |-
                    Indicates the type of authentication request.

                    **Values:**
                    * `Y` - Requests 3DSS to Add PRIOR information
                    * `N` - Requests Not to Add PRIOR information
                  minLength: 1
                  maxLength: 1
                  example: 'Y'
                threeDSRequestorPriorAuthenticationInfo:
                  $ref: '#/components/schemas/threeDSRequestorPriorAuthenticationInfo'
                threeDSReqPriorAuthMethod:
                  type: string
                  description: |-
                    Method that was used by the cardholder for the prior authentication.
                    **Values:** 
                    - `FRICTIONLESS_AUTHENTICATION` (01) frictionless
                    - `CARDHOLDER_CHALLENGE_OCCURRED` (02) with friction
                  example: 'FRICTIONLESS_AUTHENTICATION'
                threeDSReqPriorAuthTimestamp:
                  type: string
                  description: |-
                    Date and time in UTC format of the prior authentication.
                    The format is C, for example `2024-07-15T10:00:00Z`.
                  example: '2024-07-15T10:00:00Z'
                threeDSReqPriorRef:
                  type: string
                  description: |-
                    The ID granted by the ACS in the prior transaction (first authentication).
                  example: 'abc123'
                threeDSReqPriorAuthData:
                  type: string
                  description: |-
                    The ID granted by the DS in the prior transaction (first authentication). If this data is not sent, 3DSS assigns it.
                    Check the session
                  example: 'xyz789'
                threeRIInd:
                  type: string
                  description: |-
                    Indicates if the transaction is recurring.
                    **Values:**
                    * `RECURRING_TRANSACTION` (01) - Recurring transaction
                    * `INSTALMENT_TRANSACTION` (02) - Installment transaction
                    * `ADD_CARD` (03) - Add card
                    * `MAINTAIN_CARD_INFORMATION` (04) - Maintain card information
                    * `ACCOUNT_VERIFICATION` (05) - Account verification
                    * `SPLIT_OR_DELAYED_SHIPMENT` (06) - Split or delayed shipment
                    * `TOP_UP` (07) - Top up
                    * `MAIL_ORDER` (08) - Mail order
                    * `TELEPHONE_ORDER` (09) - Telephone order
                    * `WHITELIST_STATUS_CHECK` (10) - Whitelist status check
                    * `OTHER_PAYMENT` (11) - Other type of payment
                    * `BILLING_AGREEMENT` (12) - Billing agreement
                    * `MASTERCARD_3RI_IS_FOR_AN_AGENT_PAYMENT_TRANSACTION` (85) - Agent payment transaction for Mastercard
                    * `MASTERCARD_3RI_FOR_UNKNOWN_OR_UNDEFINED_FINAL_AMOUNT_BEFORE_PURCHASE_TRANSACTION` (86) - Transaction for Mastercard with unknown or undefined final amount before purchase
                    * `VISA_UNSCHEDULED_CREDENTIAL_ON_FILE` (81) - Unscheduled credential on file (Visa)
              example: 'RECURRING_TRANSACTION'
              required:
                - acctNumber
                - cardExpiryDate
                - purchaseAmount
                - purchaseCurrency
                - redirectURI
            examples:
              Successful request without friction and minimum required fields:
                value:
                  acctNumber: '4005580000000040'
                  cardExpiryDate: '2411'
                  purchaseAmount: '8.25'
                  redirectURI: 'http://www.placetopay.com'
                  purchaseCurrency: COP
              Successful request with cardholder billing information:
                value:
                  acctNumber: '4012000000001097'
                  cardExpiryDate: '2411'
                  purchaseAmount: '15000'
                  redirectURI: 'http://www.placetopay.com'
                  purchaseCurrency: COP
                  cardholderName: John Doe
                  email: john.doe@example.com
                  billAddrCity: Medellin
                  billAddrCountry: COL
                  billAddrLine1: 'Cl 72 No. 15 F-07, El libertador'
                  billAddrPostCode: '76001'
              Successful request with cardholder account information:
                value:
                  acctNumber: '4012000000001097'
                  cardExpiryDate: '2411'
                  purchaseAmount: '15000'
                  redirectURI: 'http://www.placetopay.com'
                  purchaseCurrency: COP
                  acctInfo:
                    chAccAgeInd: '03'
                    chAccChange: '20200801'
                    chAccChangeInd: '02'
                    chAccDate: '20200824'
                    chAccPwChange: '20200801'
                    chAccPwChangeInd: '01'
                    nbPurchaseAccount: '0'
                    provisionAttemptsDay: '1'
              Successful request with cardholder delivery information:
                value:
                  acctNumber: '4012000000001097'
                  cardExpiryDate: '2411'
                  purchaseAmount: '15000'
                  redirectURI: 'http://www.placetopay.com'
                  purchaseCurrency: COP
                  shipAddrCity: Medellin
                  shipAddrCountry: COL
                  shipAddrLine1: 'Cl 72 No. 15 F-07, El libertador'
                  shipAddrPostCode: '76001'
              Failed request with validation error:
                value:
                  acctNumber: '4005580000000040'
                  cardExpiryDate: '2411'
                  purchaseAmount: '8.25'
                  redirectURI: 'http://www.placetopay.com'
                  email: john.doe@example.com
                  purchaseCurrency: 'COP'
              Request with friction flow or challenge:
                value:
                  acctNumber: '4009000000502'
                  cardExpiryDate: '2411'
                  purchaseAmount: '800'
                  redirectURI: 'http://www.placetopay.com'
                  purchaseCurrency: 'COP'
              Successful request to request 3DSS to add PRIOR information:
                value:
                  acctNumber: '4009000000502'
                  cardExpiryDate: '2411'
                  purchaseAmount: '800'
                  redirectURI: 'http://www.placetopay.com'
                  purchaseCurrency: 'COP'
                  addPriorInformation: 'Y'
              Successful request sending PRIOR information:
                value:
                  acctNumber: '4009000000502'
                  cardExpiryDate: '2411'
                  purchaseAmount: '800'
                  redirectURI: 'http://www.placetopay.com'
                  purchaseCurrency: 'COP'
                  threeDSRequestorPriorAuthenticationInfo:
                    threeDSReqPriorAuthMethod: 'CARDHOLDER_CHALLENGE_OCCURRED'
                    threeDSReqPriorAuthTimestamp: '202012121232'
                    threeDSReqPriorRef: 'c83f3f5d-1a47-4eff-9fd0-6b63090a89c6'
                    threeDSReqPriorAuthData: '1234565d-1a47-4eff-9fd0-6b63090a3445'
              Request with recurrence:
                value:
                  acctNumber: '4009000000502'
                  cardholderName: 'John Doe'
                  cardExpiryDate: '2411'
                  redirectURI: 'http://www.placetopay.com'
                  messageCategory: 'NPA'
                  threeDSAuthenticationInd: '02'
                  recurringFrequency: '30'
                  recurringExpiry: '20210801'
                  purchaseAmount: '800'
                  purchaseCurrency: 'COP'
              Request for a subscription:
                value:
                  acctNumber: '4009000000502'
                  cardholderName: 'John Doe'
                  cardExpiryDate: '2411'
                  redirectURI: 'http://www.placetopay.com'
                  messageCategory: 'NPA'
                  threeDSAuthenticationInd: 'ADD_CARD'
                  purchaseAmount: '800'
                  purchaseCurrency: 'COP'
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value: {}
          text/html:
            schema:
              type: object
              properties: {}
        description: '### Data to send and request examples'
      parameters: []
      security:
        - Authorization: []
      tags:
        - Sessions
  '/v2x/transactions/{transactionID}':
    parameters:
      - schema:
          type: string
        name: transactionID
        in: path
        required: true
        description: ' Identificador de la transacción obtenido en la respuesta del endpoint api/threeds/v2x/sessions'
    get:
      summary: Obtener información de una transacción
      operationId: get-transactions-transactionID
      responses:
        '200':
          $ref: '#/components/responses/success-response-transactions'
        '400':
          description: |-
            Respuesta recibida: 400 Bad Request
            Este mensaje de error puede aparecer cuando en la petición no se 
            pasan correctamente los encabezados requeridos:
            - Por ejemplo host inválido o ausente.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples: {}
            application/xml:
              schema:
                type: object
                properties: {}
          headers: {}
        '401':
          $ref: '#/components/responses/unauthorized-response'
        '404':
          description: |-
            Respuesta recibida: 400 Not Found
             Este mensaje de error puede aparecer cuando el parámetro transactionID 
             en el endpoint, no se reconoce como una transacción registrada en la 
             base de datos y por tanto el recurso no se encuentra disponible.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer ACCESS_TOKEN
        - schema:
            type: string
          in: header
          name: Accept
          description: application/json
      tags:
        - 'Transactions '
      x-internal: false
  /v1/merchants:
    post:
      summary: Crear un comercio
      operationId: post-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: object
                    required:
                      - code
                    properties:
                      code:
                        type: number
                  data:
                    type: object
                    required:
                      - token
                    properties:
                      token:
                        type: string
                        minLength: 1
                required:
                  - status
                  - data
              examples:
                Comercio creado con éxito:
                  value:
                    status:
                      code: 1000
                    data:
                      token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                No autenticado:
                  value:
                    message: Unauthenticated.
        '422':
          description: Mensajes de validación de datos
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: number
                      error:
                        type: string
                        minLength: 1
                    required:
                      - code
                      - error
                required:
                  - status
              examples:
                Validación de campo requerido:
                  value:
                    status:
                      code: 1001
                      error: The name field is required.
                Validación por forma:
                  value:
                    status:
                      code: 1002
                      error: The country must be 3 characters.
                El comercio ya existe:
                  value:
                    status:
                      code: 1003
                      error: The name has already been taken.
                Nombre de la sucursal ya existe:
                  value:
                    status:
                      code: 1004
                      error: The branch.name has already been taken.
                Franquiocia no habilitada:
                  value:
                    status:
                      code: 1005
                      error: 'The subscriptions.0.franchise is not enabled '
                Acquiriente no habilitado:
                  value:
                    status:
                      code: 1006
                      error: The subscriptions.0.acquirerBIN is not enabled
                Directory server no existe:
                  value:
                    status:
                      code: 1007
                      error: Franchise subscriptions.0.franchise does not have a directory server configured
                Directory server no habilitado:
                  value:
                    status:
                      code: 1008
                      error: The directory server of franchise subscriptions.0.franchise is not enabled
                Adquiriente no existe:
                  value:
                    status:
                      code: 1009
                      error: The selected subscriptions.0.acquirerBIN is invalid.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 90
                  description: Nombre del comercio
                brand:
                  type: string
                  maxLength: 25
                  minLength: 0
                country:
                  type: string
                  minLength: 3
                  maxLength: 3
                  description: 'Código alfabatico del país '
                currency:
                  type: string
                  maxLength: 3
                  minLength: 3
                  description: 'Código alfabatico de la moneda '
                document:
                  type: object
                  properties:
                    type:
                      type: string
                      minLength: 1
                      description: 'Tipo de documento '
                    number:
                      type: string
                      minLength: 1
                      description: Número de documento
                url:
                  type: string
                  minLength: 1
                  maxLength: 90
                  description: Url del comercio
                mcc:
                  type: number
                  description: 'código de categoría de comercial '
                enrollment:
                  type: boolean
                  description: 'Indicador que indica si desea enrolar el comercio en la marca'
                isicClass:
                  type: number
                  description: Código clase CIIU
                branch:
                  type: object
                  description: Información de la sucursal
                  required:
                    - name
                    - brand
                    - country
                    - currency
                  properties:
                    name:
                      type: string
                      minLength: 1
                      maxLength: 90
                      description: Nombre de la sucursal
                    brand:
                      type: string
                      minLength: 1
                      description: Marca
                      maxLength: 25
                    country:
                      type: string
                      maxLength: 3
                      minLength: 3
                      description: Código alfabatico del país de la sucursal
                    currency:
                      type: string
                      minLength: 3
                      maxLength: 3
                      description: 'Código alfabatico de la moneda de la sucursal '
                subscriptions:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  description: Información de la suscripción por sucursal
                  items:
                    type: object
                    description: Información de la subscripción
                    properties:
                      franchise:
                        type: number
                        description: |-
                          ID
                           de la franquicia
                      acquirerBIN:
                        type: number
                        description: BIN del adquiriente
                      version:
                        type: number
                        minimum: 1
                        maximum: 2
                        description: Versión del protocolo
                    required:
                      - franchise
                      - acquirerBIN
                      - version
                invitations:
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        type: string
              required:
                - name
                - country
                - currency
                - document
                - url
                - mcc
                - branch
                - subscriptions
                - invitations
            examples:
              Estructura para crear un comercio:
                value:
                  name: EGM Ingenieria sin frondteras
                  brand: placetopay
                  country: COL
                  currency: COP
                  document:
                    type: RUT
                    number: 123456789-0
                  url: 'https://www.placetopay.com'
                  mcc: 742
                  isicClass: 111
                  branch:
                    name: Oficina principal
                    brand: placetopay uno
                    country: COL
                    currency: COP
                  subscriptions:
                    - franchise: 1
                      acquirerBIN: 12345678910
                      version: 2
                  invitations:
                    - admin@admin.com: null
          application/xml:
            schema:
              type: object
              properties: {}
        description: 'Envie los campos necesarios para que la API cree un nuevo comercio. '
      description: Crear un comercio
      parameters:
        - schema:
            type: string
          in: header
          name: Accept
          description: application/json
          required: true
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer ACCESS_TOKEN
          required: true
      tags:
        - Merchants
  /v1/merchants/{merchantID}/branches:
    post:
      summary: Agregar sucursales a un comercio
      operationId: post-branches
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                branches:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  description: Sucursales para agregar al comercio
                  items:
                    type: object
                    description: Sucursales para agregar al comercio
                    properties:
                      name:
                        type: string
                        minLength: 1
                        maxLength: 90
                        description: Nombre de la sucursal
                      brand:
                        type: string
                        minLength: 1
                        maxLength: 25
                        description: Marca
                      country:
                        type: string
                        minLength: 3
                        maxLength: 3
                        description: Código alfabético del país de la sucursal
                      currency:
                        type: string
                        minLength: 3
                        maxLength: 3
                        description: Código alfabético de la moneda de la sucursal
                      url:
                        type: string
                        minLength: 1
                        maxLength: 90
                        description: Url de la página web de la sucursal
                    required:
                      - name
                      - brand
                      - country
                      - currency
                      - url
            examples:
              Estructura para agregar sucursales a un comercio:
                value:
                  branches:
                    - name: Oficina Medellin
                      brand: Evertec Medellin
                      country: COL
                      currency: COP
                      url: 'https://example-uno.com'
                    - name: Oficina Bogotá
                      brand: Evertec Bogotá
                      country: COL
                      currency: COP
                      url: 'https://example-dos.com'
          application/xml:
            schema:
              type: object
              properties: { }
        description: Envíe los campos necesarios para que la API agregue las sucursales a un comercio.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: object
                    required:
                      - code
                    properties:
                      code:
                        type: number
                  data:
                    type: object
                    required:
                      - token
                    properties:
                      token:
                        type: string
                        minLength: 1
                required:
                  - status
                  - data
              examples:
                Sucursal creada con éxito:
                  value:
                    status:
                      code: 1000
                    data:
                      - id: 1
                        name: Oficina Ciudad A
                        brand: Compañía Ciudad A
                        url: 'https://company-a.com'
                      - id: 2
                        name: Oficina Ciudad B
                        brand: Compañía Ciudad B
                        url: 'https://company-b.com'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                No autenticado:
                  value:
                    message: Unauthenticated.
        '404':
          description: El comercio no existe
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: number
                      error:
                        type: string
                        minLength: 1
                    required:
                      - code
                      - error
                required:
                  - status
              examples:
                Validación de comercio exista:
                  value:
                    status:
                      code: 1010
                      error: The merchant does not exist
        '422':
          description: Mensajes de validación de datos
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: number
                      error:
                        type: string
                        minLength: 1
                    required:
                      - code
                      - error
                required:
                  - status
              examples:
                Validación de campo requerido:
                  value:
                    status:
                      code: 1001
                      error: The branches field is required.
                Validación por tamaño:
                  value:
                    status:
                      code: 1002
                      error: The branches.0.country must be 3 characters.
                Moneda no existe:
                  value:
                    status:
                      code: 1002
                      error: The selected branches.0.currency is invalid.
                Nombre de la sucursal ya existe:
                  value:
                    status:
                      code: 1004
                      error: The branches.0.name has already been taken.
                URL Invalida:
                  value:
                    status:
                      code: 1004
                      error: The branches.0.url must be a valid URL.
      description: Agregar sucursales a un comercio
      parameters:
        - schema:
            type: string
          in: header
          name: Accept
          description: application/json
          required: true
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer ACCESS_TOKEN
          required: true
      tags:
        - Merchants
components:
  schemas:
    PhoneProperties:
      title: PhoneProperties
      type: object
      x-examples:
        Ejemplo de petición:
          cc: '1'
          subscriber: '1234567899'
      description: '**Valores aceptados según especificación** Ver formato [ITU-E.164](https://www.itu.int/rec/dologin_pub.asp?lang=e&id=T-REC-E.164-201011-I!!PDF-S&type=items)'
      x-tags:
        - Models
      properties:
        cc:
          type: string
          minLength: 1
          maxLength: 3
          description: Código del país.
        subscriber:
          type: string
          maxLength: 15
          description: Suscriptor.
      required:
        - cc
        - subscriber
    threeDSRequestorAuthenticationInfoProperties:
      title: threeDSAuthenticationInfo
      type: object
      description: 'Información sobre cómo el 3DS Requestor autenticó al titular de la tarjeta antes o durante la transacción.'
      x-tags:
        - Models
      x-examples:
        Ejemplo de petición:
          threeDSReqAuthData: 28401b9d217ef8731f0dbee99c73c5902c183c5b1428d572ef63a4fe26586548
          threeDSReqAuthMethod: 'FRICTIONLESS_AUTHENTICATION'
          threeDSReqAuthTimestamp: '202103051200'
      properties:
        threeDSReqAuthData:
          type: string
          maxLength: 20000
          description: Datos de autenticación del solicitante de 3DS.
        threeDSReqAuthMethod:
          type: string
          description: |-
            Mecanismo utilizado por el Titular de la tarjeta para autenticarse ante el 3DS Requestor.
            **Values:**
            * `REQUESTOR_AUTHENTICATED_OCCURRED` (01) - Autenticación del solicitante ocurrida
            * `AUTHENTICATED_WITH_OWN_REQUESTOR_CREDENTIALS` (02) - Autenticado con credenciales propias del solicitante
            * `AUTHENTICATED_IN_REQUESTOR_WITH_FEDERATED_ID` (03) - Autenticado en el solicitante con ID federado
            * `AUTHENTICATED_IN_REQUESTOR_WITH_ISSUER_CREDENTIALS` (04) - Autenticado en el solicitante con credenciales del emisor
            * `AUTHENTICATED_IN_REQUESTOR_USING_THIRD_PARTY_AUTHENTICATION` (05) - Autenticado en el solicitante usando autenticación de terceros
            * `AUTHENTICATED_IN_REQUESTOR_WITH_FIDO` (06) - Autenticado en el solicitante con FIDO
            * `AUTHENTICATED_IN_REQUESTOR_USING_FIDO_AUTHENTICATOR` (07) - Autenticado en el solicitante usando autenticador FIDO
            * `SRC_ASSURANGE_DATA` (08) - Datos de aseguramiento SRC
            * `MASTERCARD_UNKNOWN_VALUE` (90) - Valor desconocido para Mastercard
          minLength: 2
          maxLength: 2
        threeDSReqAuthTimestamp:
          type: string
          description: |-
            Fecha y hora en UTC de la autenticación del titular de la tarjeta.
            **Formato:** YYYYMMDDHHMM
            **Ejemplo:** 202506011200
          minLength: 12
          maxLength: 12
    acctInfoProperties:
      title: acctInfo
      type: object
      description: 'Información adicional sobre la cuenta del titular de la tarjeta.'
      x-tags:
        - Models
      x-examples:
        'Ejemplo de petición ':
          chAccAgeInd: '01'
          chAccChange: '20210310'
          chAccChangeInd: '02'
          chAccDate: '20210310'
          chAccPwChange: '20210310'
          chAccPwChangeInd: '03'
          nbPurchaseAccount: '1234'
          provisionAttemptsDay: '002'
          txnActivityDay: '02'
          txnActivityYear: '2'
          paymentAccAge: '20210307'
          paymentAccInd: '01'
          shipAddressUsage: '20210305'
          shipAddressUsageInd: '02'
          shipNameIndicator: '01'
          suspiciousAccActivity: '02'
      properties:
        chAccAgeInd:
          type: string
          description: |-
            Longitud del tiempo en que la cuenta fue creada en el sitio web del comercio.

            **Valores:**
            * NO_ACCOUNT (01) - Sin cuenta
            * CREATED_DURING_TRANSACTION (02) - Creado durante la transacción
            * LESS_30_DAYS (03) - Menos de 30 días
            * BETWEEN_30_AND_60_DAYS (04) - Entre 30 y 60 días
            * MORE_60_DAYS (05) - Más de 60 días
          maxLength: 2
          minLength: 2
        chAccChange:
          type: string
          description: |-
            Fecha del último cambio efectuado en la cuenta del tarjetahabiente en el sitio web del comercio. Incluyendo dirección de envío, dirección de pago.
            **Formato:** YYYYMMDD
            **Ejemplo:** 20250601
          minLength: 8
          maxLength: 8
        chAccChangeInd:
          type: string
          description: |-
            Longitud del tiempo desde el último cambio efectuado en la cuenta en el sitio web del comercio.
            **Valores:**
            * CHANGED_DURING_TRANSACTION (01) - Cambiado durante la transacción
            * LESS_30_DAYS (02) - Menos de 30 días
            * BETWEEN_30_AND_60_DAYS (03) - Entre 30 y 60 días
            * MORE_60_DAYS (04) - Más de 60 días
          minLength: 2
          maxLength: 2
        chAccDate:
          type: string
          description: |-
            Fecha en la que se creó la cuenta en el sitio web del comercio.
            **Formato:** YYYYMMDD
            **Ejemplo:** 20250601
          minLength: 8
          maxLength: 8
        chAccPwChange:
          type: string
          description: |-
            Fecha en la que se realizó el último cambio o recuperación de contraseña.
            **Formato:** YYYYMMDD
            **Ejemplo:** 20250601
          minLength: 8
          maxLength: 8
        chAccPwChangeInd:
          type: string
          description: |-
            Longitud de tiempo desde el último cambio o recuperación de contraseña.
            **Valores:**
            * NO_CHANGE (01) - Sin cambios
            * CHANGED_DURING_TRANSACTION (02) - Cambiado durante la transacción
            * LESS_30_DAYS (03) - Menos de 30 días
            * BETWEEN_30_AND_60_DAYS (04) - Entre 30 y 60 días
            * MORE_60_DAYS (05) - Más de 60 días
          minLength: 2
          maxLength: 2
        nbPurchaseAccount:
          type: string
          description: Número de compras durante los últimos 6 meses.
          maxLength: 4
          minLength: 1
        provisionAttemptsDay:
          type: string
          description: |-
            Número de intentos de agregar tarjetas en las últimas 24 horas.
            **Ejemplos de valores:** 2, 02, 002
          maxLength: 3
        txnActivityDay:
          type: string
          description: |-
            Número de transacciones (exitosas y abandonadas) para esta cuenta en las últimas 24 horas.
            **Ejemplos de valores:** 2, 02, 002
          maxLength: 3
        txnActivityYear:
          type: string
          description: |-
            Número de transacciones (exitosas y abandonadas) para esta cuenta en el último año.
            **Ejemplos de valores:** 2, 02, 002
          maxLength: 3
        paymentAccAge:
          type: string
          description: |-
            Fecha en la que el método de pago se agregó a la cuenta del usuario en el sitio web del comercio.
            **Formato:** YYYYMMDD
            **Ejemplo:** 20250601
          minLength: 8
          maxLength: 8
        paymentAccInd:
          type: string
          description: |-
            Longitud de tiempo desde que el método de pago fué enrolado en la cuenta en el sitio web del comercio.
            **Valores:**
            * NO_ACCOUNT (01) - Sin cuenta
            * CREATED_DURING_TRANSACTION (02) - Creado durante la transacción
            * LESS_30_DAYS (03) - Menos de 30 días
            * BETWEEN_30_AND_60_DAYS (04) - Entre 30 y 60 días
            * MORE_60_DAYS (05) - Más de 60 días

          minLength: 2
          maxLength: 2
        shipAddressUsage:
          type: string
          description: |-
            Fecha en la que la dirección de entrega fue usada por primera vez en el sitio web del comercio.
            **Formato:** YYYYMMDD
            **Ejemplo:** 20250601
          minLength: 8
          maxLength: 8
        shipAddressUsageInd:
          type: string
          description: |-
            Longitud de tiempo desde que la dirección de entrega fue usada por primera vez en el sitio web del comercio.
            **Valores:**
            * 01 - Esta transacción
            * 02 - Menos de 30 días
            * 03 - Entre 30 y 60 días
            * 04 - Más de 60 días
          minLength: 2
          maxLength: 2
        shipNameIndicator:
          type: string
          description: |-
            Indica si el nombre del titular de la tarjeta es igual al nombre de envío usado en esta transacción.
            **Valores:**
            * 01 - Nombre de cuenta idéntico al nombre de envío.
            * 02 - Nombre de cuenta diferente al nombre de envío.
          minLength: 2
          maxLength: 2
        suspiciousAccActivity:
          type: string
          description: |-
            Indica si el comercio ha experimentado actividad sospechosa (incluido fraude previo) en la cuenta del titular de la tarjeta.
            **Valores:**
            * 01 - No se ha observado actividad sospechosa.
            * 02 - Se ha observado actividad sospechosa.
          minLength: 2
          maxLength: 2
    merchantRiskIndicatorProperties:
      title: merchantRiskIndicator
      type: object
      description: 'Evaluación del comerciante sobre el nivel de riesgo de fraude en la autenticación específica.'
      x-tags:
        - Models
      x-examples:
        Ejemplo de petición:
          deliveryEmailAddress: string
          deliveryTimeframe: st
          giftCardAmount: string
          giftCardCount: st
          giftCardCurr: str
          preOrderDate: stringst
          preOrderPurchaseInd: st
          reorderItemsInd: st
          shipIndicator: st
      properties:
        deliveryEmailAddress:
          type: string
          description: 'Para entrega electrónica, la dirección de correo electrónico a la que se entregó la mercancía.'
          maxLength: 254
        deliveryTimeframe:
          type: string
          description: |-
            Indica el plazo de entrega de la mercancía.

            **Valores:**
            * ELECTRONIC_DELIVERY (01) - Entrega electrónica
            * SAME_DAY_SHIPPING (02) - Envío el mismo día
            * OVERNIGHT_SHIPPING (03) - Envío nocturno
            * TWO_DAYS_OR_MORE_SHIPPING (04) - Envío de dos días o más
          maxLength: 2
          minLength: 2
        giftCardAmount:
          type: string
          description: |-
            Para compras con tarjeta de regalo o prepago, el monto total de la compra de tarjetas de regalo o prepago en unidades principales (por ejemplo, 123,45 USD es 123).
            **Ejemplos de valores:** 123, 0123, 00123
          maxLength: 15
        giftCardCount:
          type: string
          description: 'Para compras con tarjeta de regalo o prepago, recuento total de tarjetas, códigos de regalo o prepago individuales comprados.'
          minLength: 2
          maxLength: 2
        giftCardCurr:
          type: string
          description: |-
            Para compras con tarjeta de regalo o prepago, código de moneda de tres dígitos ISO 4217 de la tarjeta de regalo.
            **Valores:** Ver formato [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217)
          minLength: 3
          maxLength: 3
        preOrderDate:
          type: string
          description: |-
            Para una compra pre-ordenada, la fecha esperada en que la mercancía estará disponible.
            **Formato:** Ymd
            **Ejemplo:** 20250601
          minLength: 8
          maxLength: 8
        preOrderPurchaseInd:
          type: string
          description: |-
            Indica si el Titular de la tarjeta está realizando un pedido de mercancía con una disponibilidad futura o una fecha de lanzamiento.
            **Valores:**
            * MERCHANDISE_AVAILABLE (01) - Mercancía disponible
            * FUTURE_AVAILABILITY (02) - Disponibilidad futura
          minLength: 2
          maxLength: 2
        reorderItemsInd:
          type: string
          description: |-
            Indica si el titular de la tarjeta está reordenando mercancía comprada anteriormente.
            **Valores:**
            * MERCHANDISE_AVAILABLE (01) - Mercancía disponible
            * FUTURE_AVAILABILITY (02) - Disponibilidad futura
          minLength: 2
          maxLength: 2
        shipIndicator:
          type: string
          description: |-
            Indica el método de envío elegido para la transacción.
            **Valores:**
            * SHIP_TO_CARDHOLDER_BILLING_ADDR (01) - Enviar a la dirección de facturación del titular de la tarjeta
            * SHIP_TO_ANOTHER_VERIFIED_ADDR_ON_FILE (02) - Enviar a otra dirección verificada en archivo
            * SHIP_TO_ADDR_DIFF_CARDHOLDER_BILLING_ADDR (03) - Enviar a una dirección diferente de la dirección de facturación del titular de la tarjeta
            * SHIP_TO_STORE (04) - Enviar a la tienda
            * DIGITAL_GOODS (05) - Bienes digitales
            * TRAVEL_EVENT_TICKETS_NOT_SHIPPED (06) - Entradas para eventos de viaje no enviadas
            * OTHER (07) - Otro
          minLength: 2
          maxLength: 2
    threeDSRequestorPriorAuthenticationInfo:
      title: threeDSRequestorPriorAuthenticationInfo
      type: object
      description: 'Información sobre cómo el 3DS Requestor autenticó al titular de la tarjeta antes o durante la transacción.'
      x-tags:
        - Models
      x-examples:
        Ejemplo de petición:
          threeDSReqPriorAuthMethod: FRICTIONLESS_AUTHENTICATION
          threeDSReqPriorAuthTimestamp: 202401011212
          threeDSReqPriorRef: c83f3f5d-1a47-4eff-9fd0-6b63090a89c6
          threeDSReqPriorAuthData: f234f3f5d-1a47-4eff-9fd4-1b62190a89f3
      properties:
        threeDSReqPriorAuthMethod:
          type: string
          description: |-
            Método de autenticación usado en la transacción.
            **Valores:**
            * `FRICTIONLESS_AUTHENTICATION` – 01 Autenticación sin fricción
            * `CARDHOLDER_CHALLENGE_OCCURRED` – 02 Autenticación con fricción
          maxLength: 2
          minLength: 2
        threeDSReqPriorAuthTimestamp:
          type: string
          description: |-
            Timestamp de la transacción en UTC
            **Formatos aceptados:**
              * c – 2020-04-21T01:44:54+00:00
              * YmdHi – 202401011212
          minLength: 12
          maxLength: 12
        threeDSReqPriorRef:
          type: string
          description: |-
            Contiene el ACS Transaction ID de la transacción anterior que fue autenticada.
            **Ejemplos de valores:** c83f3f5d-1a47-4eff-9fd0-6b63090a89c6
          maxLength: 72
        threeDSReqPriorAuthData:
          type: string
          description: |-
            Contiene el DS Transaction ID de la transacción anterior que fue autenticada.
            **Ejemplos de valores:** c83f3f5d-1a47-4eff-9fd0-6b63090a89c6
          maxLength: 72
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
  responses:
    success-response-transactions:
      description: |-
        Respuesta recibida: 200 Ok
            Esta es una respuesta satisfactoria para el servicio de
            consulta de información de transacciones.
      content:
        application/json:
          schema:
            description: ''
            type: object
            nullable: true
            properties:
              enrolled:
                example: 'Y'
                enum:
                  - 'Y'
                  - 'N'
                description: Indica si la tarjeta con la cual se realizó la transacción está enrolada (está registrada en los rangos de tarjeta para el emisor específico).
                type: string
              transStatus:
                type: string
                minLength: 1
                description: Indicador del estado de autenticación de una transacción.
                enum:
                  - 'Y'
                  - 'N'
                  - 'U'
                  - 'A'
                  - 'C'
                  - 'R'
                maxLength: 1
                example: 'Y'
              transStatusReason:
                type: string
                description: 'Proporciona información sobre por qué el campo Estado de la transacción (transStatus) tiene el valor especificado. '
                enum:
                  - '01'
                  - '02'
                  - '03'
                  - '04'
                  - '05'
                  - '06'
                  - '07'
                  - '08'
                  - '09'
                  - '10'
                  - '11'
                  - '12'
                  - '13'
                  - '14'
                  - '15'
                  - '16'
                  - '17'
                  - '18'
                  - '19'
                  - '20'
                  - '21'
                minLength: 2
                maxLength: 2
                nullable: true
              eci:
                type: string
                description: Indicador del resultado de la autenticación generado por el comercio electrónico.
                example: '07'
                minLength: 2
                maxLength: 2
              acsTransID:
                type: string
                description: Identificador único de transacción generado por el ACS.
                minLength: 36
                maxLength: 36
                example: c83f3f5d-1a47-4eff-9fd0-6b63090a89c6
                format: uuid
              dsTransID:
                type: string
                description: Identificador único de transacción generado por el DS.
                minLength: 36
                maxLength: 36
                example: c83f3f5d-1a47-4eff-9fd0-6b63090a89c6
                format: uuid
              threeDSServerTransID:
                type: string
                description: Identificador único de transacción generado por el 3DS Server.
                minLength: 36
                maxLength: 36
                example: c83f3f5d-1a47-4eff-9fd0-6b63090a89c6
                format: uuid
              sdkTransID:
                type: string
                format: uuid
                example: 569c905d-b7cc-4f46-aad9-d6bedadbd2fc
                minLength: 36
                maxLength: 36
                description: Identificador de transacción único universal asignado por 3DS SDK para identificar una transacción.
              authenticationValue:
                type: string
                description: |-
                  Valor de autenticación para la franquicia generado por el ACS. Este
                  valor se debe pasar en el proceso de autorización a la red financiera.
                minLength: 28
                maxLength: 28
                example: AJkBABIWcQAAAAM5FwIzdGiYeHM=
              messageVersion:
                type: string
                minLength: 5
                maxLength: 8
                example: 2.2.0
                enum:
                  - 2.2.0
                description: Es el número de versión del protocolo 3DS que utiliza el sistema para ejecutar
                  el flujo de autenticación. Esta versión la establece el servidor 3DS con el mensaje AReq
                  y no cambia durante todo el flujo de una transacción.
              messageCategory:
                type: string
                minLength: 2
                maxLength: 2
                example: 02
                enum:
                  - PA - 'Payment (01-PA)'
                  - NPA - 'Non-Payment (02-NPA)'
                description: Indica la categoria del mensaje.
              authMethod:
                type: string
                minLength: 2
                maxLength: 2
                example: 02
                enum:
                  - FRICTIONLESS_AUTHENTICATION (01)
                  - CARDHOLDER_CHALLENGE_OCCURRED (02)
                  - AVS_VERIFIED (03)
                  - OTHER_ISSUER_METHODS (04)
                description: Indica si la transacción tuvo o no desafío.
              authTimestamp:
                type: string
                maxLength: 30
                example: 2020-04-21T01:44:54+00:00
                description: Indica el timestamp de la autenticacion.
              authInd:
                type: string
                example: RECURRING_TRANSACTION
                description: Define el tipo de autenticación aplicada según el canal utilizado.
              deviceChannel:
                type: string
                example: BRW
                description: Canal a través del cual se realiza la transacción.
              challengeInd:
                type: string
                example: NO_PREFERENCE
                description: Indicador de desafío del solicitante 3DS.
            required:
              - enrolled
              - transStatus
              - eci
              - acsTransID
              - dsTransID
              - threeDSServerTransID
              - messageVersion
              - messageCategory
              - authMethod
              - authTimestamp
              - authInd
          examples:
            Respuesta Exitosa:
              value:
                enrolled: 'Y'
                transStatus: 'Y'
                transStatusReason: null
                eci: '07'
                acsTransID: c83f3f5d-1a47-4eff-9fd0-6b63090a89c6
                dsTransID: c83f3f5d-1a47-4eff-9fd0-6b63090a89c6
                threeDSServerTransID: 569c905d-b7cc-4f46-aad9-d6bedadbd2fc
                sdkTransID: null
                authenticationValue: AJkBAmBANQAAACcPhAI0dAJBQVk=
                messageVersion: 2.2.0
                messageCategory: 'PA'
                authMethod: 'CARDHOLDER_CHALLENGE_OCCURRED'
                authTimestamp: '2020-04-21T01:44:54+00:00'
    unauthorized-response:
      description: |
        Respuesta recibida: 401 Unauthorized
            Este mensaje de error puede aparecer cuando en la petición,
            el token aportado no permite autenticarse satisfactoriamente:
            - Token ausente, expirado o inválido
      content:
        application/json:
          schema:
            description: ''
            type: object
          examples:
            Respuesta No Autorizado:
              value:
                message: Unauthenticated.
        application/xml:
          schema:
            type: object
            properties: {}
  examples: {}
security:
  - Authorization: []
tags:
  - name: Sessions
  - name: 'Transactions '
